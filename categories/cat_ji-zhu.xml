<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>石桥弯 (关于文章 技术)</title><link>https://youngquan.github.io/</link><description></description><atom:link href="https://youngquan.github.io/categories/cat_ji-zhu.xml" rel="self" type="application/rss+xml"></atom:link><language>zh_cn</language><copyright>Contents © 2023 &lt;a href="mailto:youngquan@qq.com"&gt;youngquan&lt;/a&gt; </copyright><lastBuildDate>Thu, 20 Apr 2023 15:09:42 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Word 技巧</title><link>https://youngquan.github.io/posts/2022/04/word-ji-qiao/</link><dc:creator>youngquan</dc:creator><description>&lt;p&gt;工作期间写了大量的文档，有研究报告、立项报告、投标书、课题申请材料、预言报告、调研报告等等以及等等，解锁了不少新成就。这些文档的内容早已忘得差不多了，但使用 Word 的一些技巧倒还熟记于心，试着总结并分享一二。&lt;/p&gt;
&lt;h4&gt;样式&lt;/h4&gt;
&lt;p&gt;内容和样式相分离，是用好 Word 的第一个原则。通过应用样式来实现内容格式的控制，能够极大程度地提高调整文档格式的便捷性和高效性。在应用样式的过程中，有以下几个建议：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;内置的“正文”样式不要修改&lt;/strong&gt;：许多样式都是在“正文”样式的基础上进行扩展，修改“正文”样式后，会牵一发而动全身，影响多个内置样式的内容。值得注意的是，表格的样式会因为内置“正文”样式的改变而无法生效。因此，若是已经改动了内置“正文”样式，需要让内置“正文”样式和默认值样式保持一致，才能让表格样式重新生效。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;能用内置样式就用内置样式&lt;/strong&gt;：一是 Word 的许多功能（目录生成、自动编号等）都是基于内置样式实现的，二是拷贝文档时，若是两个文档都是使用的内置样式，则拷贝过来的内容会自动按照当前文档的内置样式生效。比如，文档 A 中内置样式“标题1”的字号修改为 2 号，文档 B 中内置样式“标题1”的字号修改为 3 号，从文档 A 中拷贝“标题1”的内容到文档 B 中后，所有样式是“标题1”的段落的字号都会变成 3 号。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可以为样式设置快捷键&lt;/strong&gt;：样式支持设置快捷键，许多内置样式也有默认的快捷键，比如内置样式”标题1“的快捷键是【Crtl+Alt+1】。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可以控制样式窗显示的样式明细&lt;/strong&gt;：有时一个文档在经过多轮复制粘贴后会充满大量的垃圾样式，导致无法找到真正有用的样式，这个时候，可以通过选择要显示的样式为【正在使用的样式】，同时选择一个样式执行【全选】操作进行样式显示更新。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;编号&lt;/h4&gt;
&lt;p&gt;Word 提供了多种自动编号的方式，如果可以的话，尽量使用自动的方式，避免手动编号：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;多级列表编号：多级列表编号支持【定义新的多级列表】，在这里你可以将样式和编号关联在一起，实现多种多级列表编号，比如【一、1、1.1】、【1、1.1、1.1.1】等。有时，无法正常进行多级编号时，可以看看是否因为应用了不同的多级列表样式。&lt;/li&gt;
&lt;li&gt;普通编号列表：【调整列表缩进】里面可以控制【编号位置】、【文本缩进】和【编号之后】的符号，值得一看。&lt;/li&gt;
&lt;li&gt;图表编号：图表的编号可以设置是否包含章节号，图表标题的样式可以用内置的【题注】样式。&lt;/li&gt;
&lt;li&gt;页码编号：支持多种编号格式（阿拉伯、罗马等），与【分节符】一起使用，可以实现一个文档内的多节编号。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;引用&lt;/h4&gt;
&lt;p&gt;交叉引用常用于图、表等题注的引用，除了引用标题和编号以外，还可以引用页码，特别是在制作标书前面的索引表时，配合上&lt;strong&gt;书签&lt;/strong&gt;的插入和引用，再也不用手动去填页码了！&lt;/p&gt;
&lt;h4&gt;查找和替换&lt;/h4&gt;
&lt;p&gt;Word 的查找和替换比我们想象的要强大得多，许多功能都隐藏在【更多】这个按钮里面。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;支持样式的查找和替换&lt;/strong&gt;：除了内容的查找，还能查找指定样式的内容；同样，在替换的结果中，也能指定样式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;支持特殊格式的查找&lt;/strong&gt;：在【特殊格式】里面有段落标记、分节符、图形等内容可供选择，许多重复操作都可以通过查找和替换实现。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;VBA 编程&lt;/h4&gt;
&lt;p&gt;在自定义功能区将【开发工具】勾选上以后，就可以录制或者编写一些宏代码实现对文档的操作，标题字体的修复、删除多余的样式、表格样式的统一等等操作都可以通过编写宏来实现。不过 VBA 语言还是太难了，不知道 Python 之父加入微软后，是否会进行优化。若是不会编写宏，网上有许多现成的宏，可以拷来使用。&lt;/p&gt;
&lt;h4&gt;模板&lt;/h4&gt;
&lt;p&gt;Word 的许多设计似乎都有编程思想的渗入，以 '.dotx'、'.dotm'结尾的模板文件能够大幅减少调格式的工作量，只是常常苦于没有人来整理模板，并进行标准化管理。&lt;/p&gt;
&lt;h4&gt;主控文档&lt;/h4&gt;
&lt;p&gt;标书内容越来越多，文档的大小也越来越大，主控文档通过将一个文档划分成多个子文档，同时利用一个主控文档进行子文档的组织、管理与编辑，降低 Word 对电脑 CPU 的性能要求。&lt;/p&gt;
&lt;p&gt;正所谓“工欲善其事必先利其器”，熟练掌握了 Word，写起文档来也能得心应手。其实自己一直想花时间在团队内部做一个有关 Word 的讲座，但似乎已经没有能力再做了。“毛血日益衰，志气日益微”，可悲可叹，只能仓促列出一些大纲和思考，愿能博君一粲。&lt;/p&gt;</description><category>Office</category><category>工作总结</category><guid>https://youngquan.github.io/posts/2022/04/word-ji-qiao/</guid><pubDate>Wed, 13 Apr 2022 02:47:33 GMT</pubDate></item><item><title>在电科读过的技术书</title><link>https://youngquan.github.io/posts/2022/04/zai-dian-ke-du-guo-de-ji-zhu-shu/</link><dc:creator>youngquan</dc:creator><description>&lt;p&gt;在中国电科集团内工作五年有余，虽工作繁忙，但忙里偷闲，期间读过很多与技术相关的书，虽多数书都是浅尝辄止，但也颇有豁然开朗之感，下面试着总结一二，或可作为离职前的工作交接内容，未尝可知。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;《Java 编程思想》&lt;/strong&gt;- [美] Bruce Eckel&lt;/p&gt;
&lt;p&gt;精通 C++ 的 Bruce Eckel 编写的 “Java 圣经”，是熟练掌握 Java 的必读书籍，不适合新手，需要一定的 Java 基础，不然读来实在难以领会作者的深刻见解。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;《Java 核心技术》&lt;/strong&gt;- [美] 凯 S.霍斯特曼（Cay S.Horstmann）&lt;/p&gt;
&lt;p&gt;Java 的入门书籍，循序渐进，有上下两册，一册基础知识，一册高级特性，或可在读完第一册的时候，开始阅读《Java 编程思想》。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;《流畅的 Python》&lt;/strong&gt;-  [巴西] Luciano Ramalho&lt;/p&gt;
&lt;p&gt;精通 Python 的必读书籍，读完才觉 Python 语言一点都不简单，平常使用到的都是 Python 的皮毛，皮毛之下尽是优雅，许多精心设计的特性都不曾理解和使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;《Python Cookbook》&lt;/strong&gt;- Alex Martelli / Anna Ravenscroft / David Ascher&lt;/p&gt;
&lt;p&gt;的确像烹饪书一样，提供很多有关 Python 的“食谱”，通过许多实际的例子介绍了如何写出 Pythonic 的代码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;《鸟哥的Linux私房菜》&lt;/strong&gt;- 鸟哥&lt;/p&gt;
&lt;p&gt;Linux 入门基础，基于 CentOS 操作系统编写，涉及了 Linux 的各方面操作，推荐阅读在线版本，网站上的内容更全更新。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;《DAMA数据管理知识体系指南》&lt;/strong&gt;- 数据管理协会（DAMA国际）&lt;/p&gt;
&lt;p&gt;有关数据治理/数据管理最权威的指南了，涉及了数据管理的方方面面，第2版更是在第1版的基础上大刀阔斧，引入了许多先进的技术和理念，值得多读几遍。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;《机器学习》&lt;/strong&gt;- 周志华&lt;/p&gt;
&lt;p&gt;谦虚的周老师写的机器学习教科书，正如周老师在前言里提到的一样，“这本书不妨多读几遍”，若是完完全全读懂了这本西瓜书，大概未来几十年都不用再担心找不到工作了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;《Deep Learning with Python》&lt;/strong&gt;- [美] 弗朗索瓦•肖莱&lt;/p&gt;
&lt;p&gt;Keras 的作者写的一本深度学习实战书籍，避免了大量的理论知识和公式推导，通过许多例子让你快速上手并应用深度学习解决实际问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;《Word排版之道》&lt;/strong&gt;- 宋翔、&lt;strong&gt;《和秋叶一起学 Word》&lt;/strong&gt;- 秋叶&lt;/p&gt;
&lt;p&gt;秋叶的书要更基础一些，宋翔的书会更复杂一些，但都能学到许多 Word 的使用技巧，让你不在为了调格式浪费大量时间。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;《写给大家看的色彩书》&lt;/strong&gt;- 梁景红&lt;/p&gt;
&lt;p&gt;配色一半靠直觉，一半靠知识，直觉加上知识，配色将更有力量。这本书比较基础，用的语言更容易被普通人理解。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;『读圣贤书，所学何事？而今而后，庶几无愧』，五年时光不在，或不能说是一事无成，但确乎还是『深愧平生之志』。好在迷途未远，来者可追，熹微的晨光过后，就是太阳升起之时。&lt;/p&gt;</description><category>书</category><category>工作总结</category><guid>https://youngquan.github.io/posts/2022/04/zai-dian-ke-du-guo-de-ji-zhu-shu/</guid><pubDate>Sat, 02 Apr 2022 07:42:45 GMT</pubDate></item></channel></rss>